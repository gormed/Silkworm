
/*

    text.cpp

    class for very simple text rendering

*/

#include <GL3/gl3w.h>

#include "state.h"
#include "array.h"
#include "text.h"

// this text renderer is mainly for debug use;
// as such it does not depend on any external resources
// and only requires a very low opengl version
// in order to minimize possibilities of failure



// store the shader texts directly in the executable

char textvertex[]=
    "#version 150\n\n"

    "in vec4 tvt;\n"
    "out vec2 cc,fc;\n\n"

    "void main() {\n"
    "  gl_Position = tvt;\n"
    "  cc = (vec2(tvt)+1.0)*0.5; cc.y=0.5-cc.y;\n"
    "  fc = cc*vec2(64.0,32.0);\n"
    "}\n";

char textfragment[]=
    "#version 150\n\n"

    "uniform sampler2D font, console;\n"
    "in vec2 cc,fc;\n"
    "out vec4 frag;\n\n"

    "void main() {\n"
    "  vec2 tf = fract(fc)*vec2(12.0/256.0,16.0/256.0)-vec2((4.0/256.0),0.0);\n"
    "  vec2 ch; ch.x = texture2D(console,cc).r;\n"
    "  ch.y = floor(ch.x*16.0)*(1.0/16.0);\n"
    "  ch.x = fract(ch.x*16.0)*(12.0/16.0);\n"
    "  float r=texture2D(font,ch+tf).r;\n"
    "  frag = vec4(1,1,1,r);\n"
    "}\n";

char textsymbol[] ="tvt";

// store the vertex array directly in the executable

float textvertices[] = {
   -1.0, 0.0, 0.0, 1.0,
    1.0, 0.0, 0.0, 1.0,
    1.0, -1.0, 0.0, 1.0,
    1.0, -1.0, 0.0, 1.0,
   -1.0, -1.0, 0.0, 1.0,
   -1.0, 0.0, 0.0, 1.0 };

// store the font texture in a huffman-encoded packed format

unsigned char packedfont[] = {
    0x00, 0x00, 0x10, 0x01, 0x02, 0x11, 0x03, 0x04, 0x11, 0x05, 0x06, 0x11, 0x07, 0x08, 0x11, 0x09,
    0x0a, 0x11, 0x0b, 0x0c, 0x11, 0x0d, 0x0e, 0x11, 0x0f, 0x10, 0x11, 0x11, 0x12, 0x11, 0x13, 0x14,
    0x11, 0x15, 0x16, 0x11, 0x17, 0x18, 0x11, 0x19, 0x1a, 0x11, 0x1b, 0x1c, 0x11, 0x1d, 0x1e, 0x11,
    0x1f, 0x20, 0x11, 0x21, 0x22, 0x11, 0x23, 0x24, 0x11, 0x25, 0x26, 0x11, 0x27, 0x28, 0x11, 0x29,
    0x2a, 0x11, 0x2b, 0x2c, 0x11, 0x2d, 0x2e, 0x11, 0x2f, 0x30, 0x11, 0x31, 0x32, 0x11, 0x33, 0x34,
    0x11, 0x35, 0x36, 0x11, 0x37, 0x38, 0x11, 0x39, 0x3a, 0x11, 0x3b, 0x3c, 0x11, 0x3d, 0x3e, 0x11,
    0x3f, 0x40, 0x11, 0x41, 0x42, 0x11, 0x43, 0x44, 0x11, 0x45, 0x46, 0x11, 0x47, 0x48, 0x11, 0x49,
    0x4a, 0x11, 0x4b, 0x4c, 0x11, 0x4d, 0x4e, 0x11, 0x4f, 0x50, 0x11, 0x51, 0x52, 0x11, 0x53, 0x54,
    0x11, 0x55, 0x56, 0x11, 0x57, 0x58, 0x11, 0x59, 0x5a, 0x11, 0x5b, 0x5c, 0x11, 0x5d, 0x5e, 0x11,
    0x5f, 0x60, 0x11, 0x61, 0x62, 0x11, 0x63, 0x64, 0x11, 0x65, 0x66, 0x11, 0x67, 0x68, 0x11, 0x69,
    0x6a, 0x11, 0x6b, 0x6c, 0x11, 0x6d, 0x6e, 0x11, 0x6f, 0x70, 0x11, 0x71, 0x72, 0x11, 0x73, 0x74,
    0x11, 0x75, 0x76, 0x11, 0x77, 0x78, 0x11, 0x79, 0x7a, 0x11, 0x7b, 0x7c, 0x11, 0x7d, 0x7e, 0x11,
    0x7f, 0x80, 0x11, 0x21, 0x11, 0x01, 0xdd, 0x55, 0x00, 0x06, 0x99, 0x01, 0x99, 0x81, 0x10, 0x19,
    0x22, 0x01, 0xff, 0x66, 0x00, 0x06, 0x8b, 0x11, 0x22, 0xdd, 0x00, 0x8d, 0x12, 0x11, 0xbb, 0x22,
    0x00, 0x05, 0x66, 0x01, 0xff, 0x8c, 0x10, 0x07, 0x11, 0x01, 0xcc, 0x98, 0x10, 0x88, 0x06, 0x11,
    0xbb, 0x77, 0x00, 0x08, 0x77, 0x01, 0xcc, 0x07, 0x10, 0x8f, 0x08, 0x11, 0x99, 0x92, 0x10, 0x38,
    0xdd, 0x01, 0xa1, 0x50, 0x11, 0x8b, 0xa9, 0x11, 0x03, 0x8f, 0x11, 0x91, 0x06, 0x11, 0x33, 0xee,
    0x00, 0x00, 0xcc, 0x00, 0x85, 0x03, 0x11, 0x44, 0xdd, 0x00, 0x9d, 0x11, 0x01, 0x03, 0xee, 0x01,
    0x77, 0x77, 0x00, 0xb5, 0x06, 0x11, 0xc1, 0x95, 0x11, 0x08, 0xa0, 0x11, 0x08, 0xcc, 0x01, 0xac,
    0x9f, 0x11, 0x88, 0x9f, 0x10, 0x77, 0xa8, 0x10, 0xaa, 0xca, 0x10, 0x34, 0x66, 0x01, 0xee, 0xbd,
    0x10, 0xad, 0x99, 0x11, 0x05, 0xb1, 0x11, 0xaf, 0x02, 0x11, 0x88, 0xaa, 0x00, 0x33, 0xff, 0x00,
    0xd5, 0x02, 0x11, 0xee, 0x88, 0x00, 0xbb, 0x33, 0x00, 0x99, 0xd1, 0x10, 0x00, 0xbf, 0x10, 0xc1,
    0x07, 0x11, 0xea, 0x09, 0x11, 0xc7, 0x8e, 0x11, 0xff, 0x33, 0x00, 0xa2, 0xa4, 0x11, 0x06, 0xaa,
    0x01, 0xff, 0xbf, 0x10, 0x07, 0xee, 0x11, 0x2b, 0xf9, 0x11, 0x4f, 0xae, 0x11, 0x11, 0x77, 0x01,
    0x98, 0x00, 0x21, 0xd7, 0x01, 0x11, 0xee, 0x55, 0x00, 0x94, 0x96, 0x11, 0x98, 0x66, 0x01, 0x77,
    0xdd, 0x00, 0x9e, 0x02, 0x11, 0xfd, 0x13, 0x11, 0x55, 0xff, 0x00, 0x09, 0x10, 0x21, 0x07, 0xf5,
    0x11, 0xf7, 0xcd, 0x11, 0x2c, 0x44, 0x01, 0xdf, 0x52, 0x11, 0x11, 0xff, 0x00, 0x44, 0x12, 0x10,
    0x1c, 0x33, 0x02, 0xaa, 0xcc, 0x10, 0x04, 0x0a, 0x21, 0xb2, 0xc3, 0x11, 0xe2, 0x9f, 0x11, 0xf6,
    0xc5, 0x11, 0x11, 0x97, 0x11, 0x09, 0x19, 0x21, 0x2b, 0x02, 0x12, 0xa0, 0xcf, 0x11, 0xe7, 0x01,
    0x11, 0xfb, 0x28, 0x11, 0xbb, 0x0c, 0x20, 0x51, 0x1d, 0x21, 0x12, 0x55, 0x01, 0xb5, 0x04, 0x21,
    0xb3, 0xdd, 0x01, 0xbb, 0xdd, 0x00, 0xe0, 0x00, 0x11, 0xba, 0x88, 0x01, 0x44, 0xee, 0x00, 0xff,
    0xe7, 0x10, 0xc1, 0x11, 0x01, 0xaa, 0xa4, 0x10, 0xab, 0x10, 0x11, 0x13, 0x08, 0x12, 0x52, 0x86,
    0x12, 0xda, 0x00, 0x11, 0x97, 0x01, 0x21, 0xff, 0x30, 0x20, 0x0c, 0xbb, 0x01, 0x98, 0x34, 0x21,
    0x0c, 0xde, 0x11, 0x5b, 0x63, 0x12, 0x8b, 0x59, 0x21, 0x39, 0x31, 0x22, 0x90, 0x5f, 0x21, 0xb6,
    0x99, 0x01, 0x19, 0xf1, 0x12, 0x01, 0x99, 0x01, 0xbb, 0x00, 0x00, 0x83, 0xbb, 0x01, 0xee, 0x1e,
    0x20, 0x0f, 0x8b, 0x11, 0x6d, 0xc3, 0x12, 0xf3, 0x93, 0x11, 0x69, 0x23, 0x12, 0x87, 0x54, 0x11,
    0x0e, 0x10, 0x12, 0xa0, 0x66, 0x01, 0x7a, 0x03, 0x12, 0xcc, 0x44, 0x00, 0xbb, 0x48, 0x20, 0xb8,
    0x04, 0x11, 0xcc, 0x6b, 0x20, 0xf0, 0x02, 0x11, 0x97, 0xa1, 0x11, 0x10, 0xaa, 0x02, 0x12, 0xc9,
    0x11, 0xc6, 0x23, 0x21, 0x7b, 0x08, 0x12, 0xff, 0x70, 0x20, 0x13, 0x9a, 0x21, 0xef, 0x75, 0x21,
    0x52, 0x80, 0x21, 0x0e, 0x1c, 0x21, 0x22, 0xd0, 0x10, 0x06, 0x66, 0x01, 0xbb, 0xff, 0x01, 0x66,
    0x02, 0x12, 0x48, 0x4a, 0x22, 0x24, 0x98, 0x12, 0x0b, 0x3b, 0x22, 0x10, 0x0a, 0x21, 0xa5, 0x5a,
    0x21, 0x14, 0x36, 0x21, 0x02, 0x1c, 0x21, 0x7c, 0x0b, 0x12, 0x9d, 0x05, 0x12, 0x6f, 0x7a, 0x12,
    0x06, 0x2b, 0x12, 0x83, 0x8a, 0x21, 0x03, 0x7e, 0x21, 0x1f, 0xd3, 0x11, 0x44, 0x19, 0x12, 0x11,
    0x74, 0x20, 0xbf, 0x62, 0x22, 0x89, 0xce, 0x21, 0xcf, 0xd0, 0x22, 0xd1, 0xd2, 0x22, 0xd3, 0xd4,
    0x22, 0xd5, 0xd6, 0x22, 0x6f, 0x22, 0x01, 0x9c, 0xee, 0x01, 0x56, 0x00, 0x02, 0x5d, 0xa9, 0x22,
    0xc3, 0xaf, 0x21, 0x9f, 0x02, 0x12, 0xc1, 0xff, 0x01, 0xdd, 0xe2, 0x20, 0x03, 0x97, 0x11, 0xaa,
    0x00, 0x02, 0x01, 0x9b, 0x22, 0xae, 0xbc, 0x22, 0x03, 0x59, 0x21, 0x93, 0xb0, 0x12, 0x9c, 0xff,
    0x01, 0xf2, 0x03, 0x12, 0x33, 0xf4, 0x20, 0xba, 0x37, 0x12, 0x11, 0xde, 0x20, 0xed, 0x42, 0x12,
    0xbb, 0x70, 0x20, 0x97, 0xc8, 0x21, 0x6e, 0xea, 0x22, 0x87, 0xf1, 0x12, 0x4c, 0xf3, 0x22, 0x07,
    0xc2, 0x13, 0x04, 0x83, 0x11, 0x0b, 0x05, 0x12, 0xb1, 0xa6, 0x22, 0xcb, 0x6b, 0x22, 0x08, 0x3f,
    0x21, 0x03, 0xaa, 0x01, 0x70, 0x22, 0x02, 0xdb, 0x8b, 0x22, 0x88, 0xb4, 0x11, 0xcd, 0x39, 0x12,
    0x77, 0xcc, 0x10, 0x19, 0xc3, 0x23, 0x3f, 0x20, 0x21, 0x00, 0x50, 0x21, 0xbd, 0xea, 0x22, 0x0d,
    0x8e, 0x22, 0x06, 0xa3, 0x21, 0x05, 0x88, 0x01, 0x6f, 0xea, 0x22, 0x10, 0x05, 0x13, 0xb7, 0x96,
    0x12, 0x0b, 0x02, 0x13, 0x26, 0xe6, 0x12, 0x03, 0x25, 0x31, 0x00, 0x39, 0x30, 0x1f, 0x88, 0x01,
    0xdd, 0x1e, 0x30, 0xa6, 0x95, 0x22, 0x0a, 0xca, 0x21, 0x23, 0x3e, 0x13, 0xde, 0xd5, 0x11, 0xa5,
    0x28, 0x32, 0x09, 0x02, 0x31, 0xeb, 0x36, 0x31, 0x01, 0x19, 0x31, 0x22, 0x38, 0x20, 0x0f, 0x98,
    0x13, 0xcc, 0x78, 0x20, 0xe1, 0xf4, 0x21, 0xfe, 0x04, 0x12, 0x34, 0xe3, 0x13, 0x00, 0x19, 0x30,
    0xe7, 0x3b, 0x32, 0xc5, 0x04, 0x12, 0xef, 0x0f, 0x32, 0x5a, 0xab, 0x23, 0xf5, 0xbb, 0x01, 0xdc,
    0x09, 0x12, 0x88, 0x9c, 0x10, 0x99, 0x41, 0x30, 0xd9, 0x66, 0x32, 0x3e, 0x19, 0x21, 0x2f, 0x62,
    0x32, 0xc4, 0x29, 0x32, 0x00, 0x68, 0x21, 0x06, 0x00, 0x21, 0x46, 0xdd, 0x23, 0xa1, 0x53, 0x31,
    0x07, 0x99, 0x01, 0xd4, 0x63, 0x31, 0x18, 0x27, 0x33, 0x04, 0xa6, 0x11, 0x0c, 0x49, 0x23, 0xf5,
    0x05, 0x12, 0x8c, 0x00, 0x02, 0xb4, 0x29, 0x31, 0x64, 0x83, 0x33, 0x05, 0x33, 0x01, 0xdd, 0x0b,
    0x20, 0x03, 0x00, 0x03, 0x58, 0x01, 0x22, 0xcd, 0xe5, 0x12, 0xff, 0xcc, 0x00, 0x96, 0x7f, 0x33,
    0x43, 0x48, 0x31, 0x00, 0x4a, 0x31, 0x04, 0x75, 0x31, 0x3a, 0x8c, 0x33, 0xa2, 0xee, 0x01, 0x5b,
    0xa7, 0x22, 0xbd, 0x9f, 0x31, 0x06, 0xcb, 0x21, 0xbe, 0xb8, 0x11, 0x77, 0x71, 0x30, 0x00, 0x5d,
    0x30, 0x33, 0x88, 0x13, 0x9b, 0x34, 0x21, 0xf8, 0xe5, 0x22, 0xcc, 0x97, 0x20, 0x18, 0x93, 0x31,
    0x95, 0x14, 0x13, 0x9b, 0x9d, 0x33, 0x0f, 0x6a, 0x33, 0x3d, 0x3b, 0x31, 0x85, 0x76, 0x33, 0x07,
    0xcc, 0x01, 0xb3, 0x03, 0x13, 0x84, 0xc4, 0x21, 0x59, 0xcc, 0x32, 0xe8, 0xe7, 0x21, 0xb6, 0xb1,
    0x31, 0x71, 0xca, 0x23, 0x6a, 0xb1, 0x23, 0xb2, 0xc8, 0x13, 0xfa, 0x12, 0x12, 0x44, 0x68, 0x30,
    0xda, 0x98, 0x31, 0x00, 0x5b, 0x22, 0x6c, 0xa9, 0x23, 0x41, 0x48, 0x13, 0x00, 0x97, 0x33, 0x1a,
    0x4b, 0x32, 0x33, 0xcc, 0x33, 0x66, 0xaa, 0x00, 0xbd, 0x97, 0x11, 0x41, 0xad, 0x33, 0x45, 0xef,
    0x32, 0x3c, 0x82, 0x33, 0x03, 0xda, 0x31, 0x79, 0x04, 0x13, 0xd3, 0x07, 0x11, 0x0e, 0x9b, 0x13,
    0xbd, 0x00, 0x13, 0x77, 0x1e, 0x20, 0x08, 0x65, 0x33, 0x99, 0xd1, 0x32, 0x00, 0x3f, 0x31, 0xe6,
    0xfb, 0x33, 0x43, 0x99, 0x23, 0xd3, 0x40, 0x13, 0xd9, 0xf6, 0x12, 0xdc, 0xff, 0x12, 0x00, 0xe7,
    0x12, 0x19, 0x01, 0x22, 0xd3, 0x99, 0x03, 0x98, 0x1a, 0x31, 0xf8, 0xea, 0x21, 0xf5, 0x9c, 0x31,
    0x57, 0x31, 0x23, 0x98, 0xb3, 0x31, 0xbb, 0x00, 0x40, 0x02, 0xba, 0x31, 0x9a, 0x03, 0x32, 0x10,
    0xe6, 0x24, 0x07, 0x90, 0x31, 0xb8, 0xad, 0x22, 0x2b, 0x32, 0x31, 0xd7, 0x39, 0x12, 0xab, 0x32,
    0x43, 0x35, 0x36, 0x44, 0x37, 0x38, 0x44, 0x39, 0x3a, 0x44, 0x3b, 0x3c, 0x44, 0x3d, 0x3e, 0x44,
    0x27, 0x97, 0x11, 0x25, 0x5e, 0x34, 0x01, 0x69, 0x22, 0x88, 0x55, 0x30, 0xc8, 0x16, 0x42, 0xf5,
    0xcd, 0x22, 0xa8, 0x5e, 0x22, 0xfb, 0x01, 0x23, 0xdd, 0x2e, 0x30, 0x55, 0x62, 0x23, 0xd9, 0xaa,
    0x23, 0xde, 0x08, 0x22, 0xbd, 0xaf, 0x22, 0xc4, 0x00, 0x13, 0x99, 0xdd, 0x00, 0x20, 0xda, 0x34,
    0xa6, 0xdf, 0x22, 0xe8, 0xb5, 0x21, 0x02, 0x9c, 0x31, 0x01, 0x66, 0x34, 0x9b, 0x98, 0x11, 0x42,
    0x47, 0x34, 0xde, 0xcc, 0x02, 0xcd, 0xaa, 0x02, 0xee, 0x50, 0x40, 0x86, 0xb5, 0x23, 0xde, 0xd3,
    0x31, 0x0a, 0x95, 0x12, 0x77, 0xda, 0x10, 0x19, 0x71, 0x22, 0xbb, 0x84, 0x20, 0x01, 0x26, 0x21,
    0xa6, 0x71, 0x42, 0xc3, 0x5d, 0x41, 0x00, 0xc0, 0x10, 0x63, 0x75, 0x23, 0xce, 0x06, 0x11, 0xc8,
    0x96, 0x13, 0x81, 0x64, 0x44, 0x8d, 0x81, 0x31, 0x62, 0x5f, 0x42, 0x07, 0xb5, 0x12, 0x16, 0x5b,
    0x24, 0x98, 0x03, 0x41, 0x66, 0x99, 0x03, 0xa4, 0xb4, 0x11, 0x7c, 0x3c, 0x13, 0x19, 0x93, 0x23,
    0x9b, 0x71, 0x31, 0xbf, 0x2b, 0x31, 0x2a, 0xc5, 0x13, 0x7f, 0x03, 0x24, 0x9c, 0x00, 0x04, 0x7a,
    0x71, 0x24, 0x15, 0x37, 0x33, 0xc5, 0x97, 0x33, 0x8c, 0x04, 0x14, 0x1b, 0x7a, 0x34, 0x87, 0x29,
    0x34, 0x8a, 0xfb, 0x34, 0xb0, 0x00, 0x14, 0x8c, 0xc1, 0x11, 0x20, 0x66, 0x44, 0x07, 0x97, 0x11,
    0x86, 0xe3, 0x12, 0x63, 0x01, 0x14, 0x9c, 0x88, 0x13, 0x91, 0xa7, 0x44, 0x5b, 0xf6, 0x24, 0x40,
    0x17, 0x31, 0x01, 0x10, 0x21, 0xc8, 0xcd, 0x42, 0xb6, 0xa6, 0x14, 0xde, 0x20, 0x41, 0x8b, 0x96,
    0x31, 0x45, 0x11, 0x22, 0x00, 0xb7, 0x21, 0xa6, 0xb7, 0x44, 0x07, 0x61, 0x21, 0x0d, 0x01, 0x44,
    0xb5, 0xfa, 0x24, 0xa7, 0x0f, 0x32, 0x9c, 0x0e, 0x41, 0x84, 0xed, 0x34, 0x4a, 0x3f, 0x32, 0xff,
    0x95, 0x41, 0xff, 0x11, 0x01, 0xc6, 0x71, 0x24, 0x2b, 0xee, 0x43, 0xc6, 0xff, 0x03, 0x55, 0x2a,
    0x40, 0xa3, 0x08, 0x44, 0xa4, 0x6c, 0x31, 0x72, 0x00, 0x24, 0xc9, 0x78, 0x34, 0xd7, 0x06, 0x14,
    0xaa, 0x7d, 0x34, 0x04, 0x4c, 0x41, 0x31, 0xe9, 0x34, 0x14, 0xb9, 0x14, 0xb5, 0x19, 0x42, 0xb8,
    0x65, 0x24, 0x89, 0xe1, 0x44, 0xb8, 0xeb, 0x24, 0xe5, 0x6a, 0x42, 0xf1, 0x01, 0x14, 0x97, 0xb4,
    0x11, 0xe6, 0xc2, 0x42, 0xb9, 0x87, 0x24, 0xc0, 0x5a, 0x31, 0x87, 0xb3, 0x23, 0x41, 0x8b, 0x11,
    0x44, 0x3f, 0x30, 0x11, 0x10, 0x20, 0xe7, 0xbc, 0x32, 0x00, 0xcd, 0x40, 0xb0, 0xb5, 0x21, 0x90,
    0xda, 0x11, 0xd4, 0x07, 0x14, 0x00, 0xd9, 0x45, 0xae, 0xe2, 0x44, 0xb3, 0x63, 0x41, 0x1d, 0x64,
    0x45, 0xb4, 0x0c, 0x54, 0x4c, 0x0e, 0x53, 0x4a, 0x23, 0x52, 0x05, 0x12, 0x51, 0x57, 0x11, 0x22,
    0xdd, 0x47, 0x20, 0x17, 0xeb, 0x25, 0x44, 0xa7, 0x20, 0xee, 0x3b, 0x34, 0x3d, 0x3a, 0x15, 0x1f,
    0x21, 0x55, 0x3b, 0x01, 0x15, 0xde, 0x01, 0x21, 0x23, 0x87, 0x33, 0x2f, 0xb1, 0x43, 0xa8, 0xaa,
    0x44, 0x45, 0x02, 0x53, 0x30, 0x0e, 0x55, 0x03, 0x92, 0x12, 0x34, 0xc3, 0x45, 0x36, 0x05, 0x15,
    0xb6, 0xf8, 0x34, 0x39, 0x8d, 0x15, 0xaa, 0x43, 0x20, 0x24, 0xe7, 0x42, 0x01, 0x2f, 0x21, 0xf0,
    0x1e, 0x22, 0xee, 0xcb, 0x30, 0x53, 0xc8, 0x45, 0x43, 0xbf, 0x11, 0xf5, 0xe2, 0x24, 0xec, 0xb6,
    0x11, 0xfc, 0xa6, 0x14, 0xff, 0x24, 0x23, 0x40, 0x84, 0x43, 0x79, 0x11, 0x24, 0xfc, 0x7d, 0x42,
    0x26, 0x58, 0x53, 0xa2, 0x83, 0x41, 0x5c, 0x86, 0x44, 0xdf, 0x37, 0x54, 0x04, 0xde, 0x31, 0xac,
    0xfc, 0x43, 0xb9, 0x8d, 0x14, 0x19, 0x25, 0x43, 0x48, 0x2d, 0x25, 0xd6, 0x95, 0x44, 0x03, 0x2d,
    0x44, 0x99, 0x8d, 0x34, 0xac, 0x40, 0x14, 0x96, 0xf8, 0x15, 0xf6, 0x88, 0x02, 0x4f, 0x64, 0x23,
    0x98, 0xf5, 0x31, 0x04, 0x46, 0x41, 0x9c, 0x48, 0x43, 0xfb, 0x4b, 0x44, 0x01, 0xaa, 0x22, 0x31,
    0x07, 0x15, 0xa3, 0xda, 0x45, 0x43, 0x86, 0x55, 0x03, 0x56, 0x41, 0x02, 0x6e, 0x22, 0x55, 0xbc,
    0x43, 0xeb, 0x5b, 0x52, 0xf3, 0xf8, 0x34, 0x59, 0x30, 0x22, 0x91, 0xa9, 0x45, 0x42, 0x3b, 0x25,
    0x8b, 0x67, 0x41, 0xf4, 0x6a, 0x42, 0x9d, 0xdd, 0x04, 0x6d, 0x3f, 0x44, 0x61, 0xa4, 0x21, 0x00,
    0xd5, 0x42, 0xc7, 0xcc, 0x55, 0xcd, 0xce, 0x55, 0xcf, 0xd0, 0x55, 0xd1, 0xd2, 0x55, 0x81, 0x64,
    0x21, 0x77, 0x09, 0x13, 0xbb, 0x59, 0x51, 0x56, 0x4c, 0x41, 0xbb, 0x03, 0x30, 0x93, 0x11, 0x43,
    0x88, 0x00, 0x25, 0xb2, 0xab, 0x24, 0xa8, 0xaa, 0x22, 0x03, 0x98, 0x15, 0x30, 0x2e, 0x52, 0xda,
    0xff, 0x11, 0x6d, 0xeb, 0x52, 0x02, 0x25, 0x51, 0x7e, 0xd1, 0x14, 0xde, 0x5b, 0x51, 0xf7, 0x01,
    0x43, 0x33, 0x42, 0x55, 0xe6, 0x62, 0x25, 0x87, 0x3a, 0x33, 0xaf, 0x08, 0x13, 0xaa, 0xe0, 0x55,
    0x65, 0x50, 0x15, 0xb2, 0xd9, 0x21, 0x25, 0x40, 0x54, 0x97, 0xf4, 0x53, 0x45, 0x71, 0x42, 0xf1,
    0xfb, 0x53, 0xa1, 0x4d, 0x21, 0xd8, 0x0e, 0x43, 0xe9, 0xf7, 0x25, 0x2f, 0x64, 0x54, 0x16, 0x93,
    0x23, 0xee, 0x93, 0x20, 0xb2, 0xb4, 0x35, 0x43, 0x19, 0x32, 0x56, 0xcc, 0x02, 0x9f, 0x16, 0x24,
    0x06, 0x6d, 0x51, 0x72, 0x1e, 0x34, 0xbe, 0x38, 0x52, 0xb3, 0xdb, 0x21, 0x9a, 0x4f, 0x15, 0x26,
    0xee, 0x42, 0xa1, 0xe8, 0x13, 0x23, 0xba, 0x13, 0x7e, 0xe7, 0x24, 0x00, 0xde, 0x45, 0xe0, 0x35,
    0x25, 0x56, 0xdd, 0x02, 0xf2, 0x28, 0x22, 0xe3, 0x6d, 0x42, 0xa4, 0x31, 0x45, 0x83, 0xce, 0x11,
    0x71, 0x73, 0x33, 0x0a, 0xcb, 0x52, 0xc4, 0xd8, 0x11, 0x42, 0x50, 0x35, 0x04, 0xe8, 0x25, 0x0e,
    0x93, 0x35, 0x92, 0x24, 0x61, 0x4e, 0x02, 0x61, 0xef, 0xcc, 0x45, 0x0b, 0x36, 0x23, 0x2f, 0xbd,
    0x56, 0x5b, 0x8b, 0x12, 0xaa, 0x0a, 0x40, 0x48, 0x10, 0x66, 0x03, 0x9d, 0x51, 0x8d, 0xb8, 0x53,
    0x8f, 0x84, 0x12, 0xf6, 0x2c, 0x61, 0x8f, 0xe7, 0x52, 0x86, 0xcc, 0x01, 0xe2, 0xb0, 0x15, 0x1f,
    0x28, 0x56, 0x41, 0xa5, 0x33, 0xdb, 0x5d, 0x14, 0xdb, 0xc8, 0x25, 0xaa, 0x53, 0x65, 0x4f, 0x05,
    0x15, 0x44, 0xf9, 0x20, 0x2c, 0x0f, 0x64, 0xfe, 0x69, 0x34, 0x04, 0x10, 0x21, 0x33, 0x04, 0x40,
    0x68, 0x4a, 0x25, 0x5d, 0x74, 0x52, 0x0d, 0x6c, 0x52, 0xb4, 0xd1, 0x32, 0x4e, 0xb4, 0x22, 0x41,
    0xdd, 0x43, 0xbe, 0xd9, 0x54, 0x55, 0xad, 0x51, 0x51, 0x35, 0x26, 0x15, 0x71, 0x44, 0x21, 0x60,
    0x46, 0xb5, 0xae, 0x55, 0x04, 0xde, 0x11, 0x35, 0x88, 0x36, 0x77, 0xaa, 0x00, 0x8b, 0x1c, 0x25,
    0x22, 0xcb, 0x32, 0x7f, 0x3c, 0x35, 0x67, 0xc5, 0x36, 0x60, 0x00, 0x15, 0x10, 0x6f, 0x32, 0x46,
    0x31, 0x26, 0xd6, 0xfe, 0x55, 0x5a, 0x8f, 0x61, 0x00, 0x2c, 0x61, 0x68, 0x54, 0x66, 0xd2, 0x08,
    0x14, 0xaf, 0x48, 0x66, 0x8b, 0x01, 0x11, 0xcc, 0xdc, 0x20, 0x9d, 0x6a, 0x66, 0x03, 0xf3, 0x42,
    0x9d, 0xaa, 0x25, 0x41, 0x07, 0x66, 0x37, 0x69, 0x23, 0xca, 0xba, 0x22, 0xfa, 0x75, 0x65, 0xea,
    0x8b, 0x43, 0x5e, 0xaf, 0x61, 0x26, 0xcc, 0x13, 0x0a, 0xe3, 0x56, 0xb9, 0x00, 0x46, 0x52, 0xf1,
    0x13, 0x14, 0xb3, 0x45, 0xae, 0x8d, 0x13, 0x6c, 0x3c, 0x52, 0x98, 0xb5, 0x51, 0x9c, 0xed, 0x41,
    0x2f, 0x31, 0x24, 0x9b, 0x0e, 0x32, 0x5f, 0x69, 0x25, 0x28, 0xef, 0x16, 0x0a, 0x34, 0x34, 0x57,
    0x8d, 0x62, 0x54, 0xcd, 0x61, 0x8d, 0xa8, 0x23, 0x56, 0x54, 0x62, 0x06, 0xc8, 0x26, 0x13, 0xe0,
    0x64, 0x85, 0x75, 0x65, 0xa8, 0x69, 0x22, 0xde, 0xa2, 0x61, 0xf6, 0x5e, 0x63, 0xe0, 0x63, 0x43,
    0xda, 0x02, 0x56, 0x69, 0x59, 0x22, 0x04, 0xc8, 0x65, 0x35, 0xd5, 0x43, 0xad, 0x67, 0x16, 0x83,
    0x8b, 0x51, 0x6c, 0xd5, 0x51, 0xd7, 0x5f, 0x25, 0xd8, 0x6d, 0x15, 0xf8, 0xcb, 0x52, 0xd3, 0x14,
    0x75, 0x29, 0x59, 0x26, 0xae, 0x15, 0x74, 0x19, 0x1a, 0x77, 0x1b, 0xd2, 0x57, 0x93, 0xa8, 0x43,
    0x09, 0xa1, 0x21, 0x13, 0x1f, 0x51, 0x12, 0x58, 0x21, 0xd6, 0x9f, 0x15, 0x26, 0xdd, 0x27, 0xac,
    0xfe, 0x46, 0x61, 0xb4, 0x25, 0x65, 0x6a, 0x16, 0x5f, 0x11, 0x13, 0x21, 0x12, 0x17, 0x23, 0x11,
    0x17, 0xbd, 0x0d, 0x16, 0xf3, 0x1b, 0x13, 0x5c, 0x45, 0x65, 0x0a, 0x76, 0x14, 0x32, 0x31, 0x77,
    0x48, 0xbb, 0x26, 0x18, 0x1c, 0x47, 0x20, 0x3a, 0x71, 0x22, 0x77, 0x16, 0xde, 0x56, 0x22, 0x8b,
    0xc2, 0x51, 0x06, 0xa3, 0x51, 0xc3, 0xe8, 0x23, 0x55, 0x04, 0x53, 0x27, 0x5f, 0x24, 0xb1, 0xaa,
    0x25, 0xde, 0x67, 0x65, 0x34, 0x7c, 0x42, 0xbb, 0x4e, 0x71, 0x64, 0x61, 0x46, 0xe0, 0x98, 0x15,
    0x82, 0x5e, 0x34, 0xe3, 0x6b, 0x66, 0xc9, 0xee, 0x06, 0xee, 0x5d, 0x20, 0x25, 0x59, 0x74, 0xa4,
    0x86, 0x35, 0xf4, 0x0b, 0x72, 0x4a, 0x50, 0x21, 0xea, 0x28, 0x54, 0x9d, 0x4c, 0x53, 0xe3, 0xee,
    0x02, 0x07, 0xda, 0x13, 0xca, 0xcc, 0x12, 0xf5, 0xd3, 0x31, 0x0e, 0x74, 0x43, 0x7a, 0x6a, 0x33,
    0xcc, 0xa4, 0x10, 0xff, 0x58, 0x71, 0xa9, 0x8b, 0x13, 0x9c, 0x38, 0x74, 0x64, 0x82, 0x46, 0xfa,
    0x46, 0x73, 0xe0, 0xb4, 0x15, 0xd0, 0x4f, 0x31, 0xdd, 0x84, 0x72, 0x5f, 0x31, 0x26, 0x43, 0xde,
    0x12, 0xdc, 0x47, 0x13, 0x1c, 0x2b, 0x52, 0x2f, 0x05, 0x64, 0x85, 0x7c, 0x22, 0x27, 0x7d, 0x75,
    0xab, 0xea, 0x32, 0x22, 0x7e, 0x72, 0x05, 0x1c, 0x21, 0xb8, 0x36, 0x71, 0x7f, 0x0c, 0x43, 0xb0,
    0x2a, 0x75, 0x27, 0x62, 0x72, 0x8b, 0x07, 0x57, 0x7d, 0x32, 0x63, 0xd8, 0x9e, 0x14, 0xa9, 0xb9,
    0x47, 0xac, 0xbb, 0x01, 0x6d, 0x48, 0x17, 0xa3, 0x57, 0x45, 0x2a, 0x92, 0x13, 0x38, 0x18, 0x67,
    0x88, 0x43, 0x47, 0xe7, 0xe1, 0x32, 0x5d, 0xf0, 0x27, 0xdc, 0x34, 0x72, 0xb6, 0x7f, 0x34, 0xe9,
    0x87, 0x76, 0x13, 0x2b, 0x75, 0xe3, 0x9c, 0x32, 0xa9, 0xe7, 0x63, 0xc9, 0xb0, 0x76, 0xcd, 0x29,
    0x77, 0xd8, 0xe7, 0x14, 0x0e, 0x4d, 0x62, 0x4c, 0x10, 0x21, 0x85, 0x98, 0x71, 0x28, 0xac, 0x15,
    0x9b, 0xee, 0x57, 0x9d, 0x1a, 0x27, 0x9f, 0x68, 0x57, 0x8f, 0x5a, 0x47, 0x0c, 0x5f, 0x63, 0xa7,
    0x9e, 0x17, 0xca, 0xab, 0x77, 0x3c, 0x50, 0x45, 0x1d, 0xd1, 0x76, 0x34, 0xa0, 0x16, 0xb1, 0xd5,
    0x77, 0x01, 0xf0, 0x25, 0xb6, 0xb8, 0x77, 0x46, 0x7d, 0x61, 0x3c, 0x18, 0x63, 0x4a, 0x22, 0x57,
    0x04, 0xbb, 0x45, 0x7b, 0xfb, 0x55, 0x79, 0x04, 0x57, 0xfe, 0xaa, 0x03, 0xd8, 0x7f, 0x73, 0x81,
    0xf5, 0x67, 0xb2, 0xd6, 0x77, 0x27, 0xfd, 0x57, 0xd4, 0x01, 0x47, 0x50, 0x95, 0x74, 0xd8, 0xd2,
    0x76, 0xf3, 0xd4, 0x77, 0xc9, 0x58, 0x77, 0x94, 0x0b, 0x87, 0x4b, 0xde, 0x21, 0x19, 0x99, 0x74,
    0x77, 0x51, 0x46, 0x6a, 0x4f, 0x77, 0x9a, 0x51, 0x72, 0x6c, 0x2c, 0x47, 0x6a, 0x56, 0x73, 0xea,
    0x0d, 0x87, 0xcd, 0xec, 0x23, 0x60, 0x60, 0x74, 0x84, 0x75, 0x74, 0x07, 0x18, 0x62, 0x7a, 0x16,
    0x84, 0x5b, 0xeb, 0x73, 0x34, 0x10, 0x42, 0x8a, 0xce, 0x53, 0x36, 0x18, 0x17, 0xbc, 0x1c, 0x75,
    0x2a, 0x66, 0x01, 0xcf, 0xf6, 0x46, 0x1a, 0xe6, 0x61, 0x3f, 0x28, 0x18, 0xfc, 0x4d, 0x42, 0x1c,
    0xde, 0x21, 0xe5, 0x46, 0x84, 0x4d, 0x4e, 0x88, 0x4f, 0x50, 0x88, 0xd1, 0x16, 0x45, 0x6a, 0xe9,
    0x63, 0x19, 0xc6, 0x54, 0x35, 0xd9, 0x74, 0x4d, 0x9d, 0x61, 0xc6, 0x7c, 0x21, 0xc6, 0x36, 0x46,
    0x59, 0x4c, 0x18, 0xe9, 0x2b, 0x86, 0x87, 0x5b, 0x15, 0x4a, 0x49, 0x87, 0xb9, 0x49, 0x21, 0x5d,
    0xdc, 0x22, 0x9c, 0xa0, 0x53, 0x98, 0xf8, 0x66, 0x4e, 0x99, 0x34, 0x63, 0x92, 0x13, 0x31, 0x34,
    0x74, 0xf9, 0xee, 0x54, 0xbd, 0xa9, 0x73, 0x9b, 0xb7, 0x31, 0xe0, 0xfd, 0x47, 0x87, 0x8f, 0x74,
    0x19, 0x06, 0x54, 0x33, 0xba, 0x23, 0x62, 0x00, 0x08, 0xa6, 0x55, 0x16, 0xfe, 0x73, 0x77, 0x00,
    0xca, 0x21, 0x88, 0x46, 0x41, 0x6b, 0x40, 0x38, 0xd9, 0x8b, 0x22, 0x21, 0xfb, 0x63, 0x60, 0xc3,
    0x48, 0x73, 0xd3, 0x38, 0xef, 0xb4, 0x75, 0xb5, 0xef, 0x43, 0x23, 0xde, 0x13, 0x55, 0x76, 0x80,
    0xaa, 0x00, 0x17, 0x50, 0x7c, 0x66, 0xd0, 0x9b, 0x67, 0x5c, 0x08, 0x18, 0x5b, 0x5c, 0x18, 0x8b,
    0xdf, 0x71, 0x00, 0xda, 0x64, 0x3e, 0x1b, 0x87, 0xb9, 0xdc, 0x56, 0xa7, 0xcc, 0x31, 0xd7, 0x00,
    0x81, 0x12, 0x43, 0x88, 0x3d, 0xb6, 0x12, 0x41, 0x03, 0x35, 0xe4, 0xb5, 0x52, 0xfc, 0x34, 0x73,
    0x86, 0x98, 0x53, 0xb3, 0x10, 0x85, 0x31, 0xba, 0x22, 0x16, 0xe7, 0x24, 0x10, 0x86, 0x24, 0xdd,
    0x3c, 0x72, 0x42, 0x0e, 0x21, 0xf3, 0xd0, 0x63, 0xbf, 0xb6, 0x57, 0xdc, 0x1e, 0x44, 0xe5, 0xb3,
    0x86, 0x96, 0x72, 0x48, 0x7e, 0x7f, 0x56, 0x1c, 0x48, 0x22, 0xc9, 0xa2, 0x61, 0xca, 0xb3, 0x32,
    0x45, 0x45, 0x73, 0xd2, 0xa5, 0x16, 0x3c, 0x91, 0x68, 0xa7, 0xa2, 0x68, 0x09, 0x84, 0x42, 0xbb,
    0x28, 0x71, 0x43, 0xaa, 0x81, 0xce, 0x07, 0x56, 0xf1, 0xae, 0x81, 0x42, 0x83, 0x67, 0x02, 0x94,
    0x81, 0x8c, 0xc1, 0x75, 0x8b, 0xa3, 0x13, 0x5f, 0x66, 0x72, 0x3f, 0xa2, 0x73, 0x04, 0x4e, 0x21,
    0x68, 0x01, 0x16, 0xaa, 0x5c, 0x40, 0x6a, 0x9f, 0x84, 0x17, 0xf8, 0x12, 0xba, 0x86, 0x82, 0x7f,
    0xa4, 0x52, 0x89, 0xab, 0x48, 0x8c, 0xd0, 0x88, 0xd0, 0xd8, 0x48, 0x03, 0xe6, 0x74, 0x19, 0xca,
    0x36, 0x0e, 0x0e, 0x49, 0x0a, 0x43, 0x82, 0xa2, 0xbf, 0x63, 0xbf, 0xc4, 0x17, 0x3d, 0xcd, 0x22,
    0x10, 0x19, 0x92, 0x26, 0xa4, 0x85, 0x07, 0xa6, 0x89, 0xfd, 0x96, 0x73, 0xd6, 0x20, 0x81, 0x68,
    0x24, 0x88, 0x6b, 0xc5, 0x38, 0xba, 0xf6, 0x11, 0xe5, 0x90, 0x14, 0x2e, 0xa0, 0x77, 0xa9, 0xb7,
    0x62, 0x65, 0xdb, 0x64, 0xff, 0x20, 0x47, 0xb4, 0x92, 0x11, 0x88, 0x05, 0x16, 0x85, 0x33, 0x36,
    0x44, 0xf4, 0x14, 0xf9, 0x62, 0x87, 0x5e, 0xa9, 0x88, 0x10, 0x72, 0x89, 0xae, 0x27, 0x96, 0xff,
    0xbb, 0x74, 0x5b, 0xe5, 0x63, 0x9c, 0xcb, 0x83, 0xd6, 0x42, 0x71, 0xf6, 0x58, 0x18, 0xa8, 0x20,
    0x16, 0x84, 0x5f, 0x18, 0x3e, 0xe7, 0x77, 0x56, 0x82, 0x61, 0x51, 0x5c, 0x98, 0x5d, 0x5e, 0x99,
    0x5f, 0x60, 0x99, 0x61, 0x62, 0x99, 0x63, 0x64, 0x99, 0x65, 0x66, 0x99, 0x67, 0x68, 0x99, 0x69,
    0x6a, 0x99, 0x6b, 0x6c, 0x99, 0x6d, 0x6e, 0x99, 0x6f, 0x70, 0x99, 0x71, 0x72, 0x99, 0x73, 0x74,
    0x99, 0x75, 0x76, 0x99, 0x77, 0x78, 0x99, 0x79, 0x7a, 0x99, 0x7b, 0x7c, 0x99, 0x7d, 0x7e, 0x99,
    0x7f, 0x80, 0x99, 0x81, 0x82, 0x99, 0x83, 0x84, 0x99, 0x85, 0x86, 0x99, 0x87, 0x88, 0x99, 0x89,
    0x8a, 0x99, 0x8b, 0x8c, 0x99, 0x8d, 0x8e, 0x99, 0x8f, 0x90, 0x99, 0x91, 0x92, 0x99, 0x93, 0x94,
    0x99, 0x95, 0x96, 0x99, 0x97, 0x98, 0x99, 0x99, 0x9a, 0x99, 0x9b, 0x9c, 0x99, 0x9d, 0x9e, 0x99,
    0x9f, 0xa0, 0x99, 0xa1, 0xa2, 0x99, 0xa3, 0xa4, 0x99, 0xa5, 0xa6, 0x99, 0xa7, 0xa8, 0x99, 0xa9,
    0xaa, 0x99, 0xab, 0xab, 0x99, 0xab, 0xab, 0x99, 0xab, 0xab, 0x99, 0xab, 0xab, 0x99, 0xab, 0xab,
    0x99, 0xab, 0xab, 0x99, 0xab, 0xab, 0x99, 0xab, 0xab, 0x99, 0xab, 0xab, 0x99, 0xab, 0xab, 0x99,
    0xab, 0xab, 0x99, 0xab, 0xab, 0x99, 0xab, 0xab, 0x99, 0xab, 0xab, 0x99, 0xab, 0xab, 0x99, 0xab,
    0xab, 0x99, 0xab, 0xab, 0x99, 0xab, 0xab, 0x99, 0xab, 0xab, 0x99, 0xab, 0xab, 0x99, 0xab, 0xab,
    0x99, 0xab, 0xab, 0x99, 0xab, 0xab, 0x99, 0xab, 0xab, 0x99, 0xab, 0xab, 0x99, 0xab, 0xab, 0x99,
    0xab, 0xab, 0x99, 0xab, 0xab, 0x99, 0xab, 0xab, 0x99, 0xab, 0xab, 0x99, 0xab, 0xab, 0x99, 0xab,
    0x33, 0x19};


// textures for containing the font and the text

unsigned int txtext[2]={0,0};


State textstate;
Array textarray;


// code for decompression
// this is in the wrong place here
// move it somewhere else

#define DICTBITS 12
#define DICTSIZE (1<<DICTBITS)
#define ENTRYMAX 256

void *decode(const unsigned char *packed, const int packedlength, const int plainlength)
{
    static unsigned char *plain;
    static unsigned short *encoded;

    static unsigned char firstentries[256];
    static unsigned char *entries[DICTSIZE];
    static int entrylength[DICTSIZE];
    static int entryuse[DICTSIZE];

    int i,j,k,u;
    int pos=0;
    int dp=256;
    int length=0;

    encoded=new unsigned short [packedlength*3/2/2];

    for(i=0;i<packedlength;i+=3)
    {
        encoded[length]=(unsigned short)packed[i]|(((unsigned short)packed[i+2]&0xf)<<8);
        encoded[length+1]=(unsigned short)packed[i+1]|(((unsigned short)packed[i+2]&0xf0)<<4);
        length+=2;
    }

    plain=new unsigned char [plainlength];

    for(i=0;i<256;i++)
    {
        firstentries[i]=i;
        entries[i]=&firstentries[i];
        entrylength[i]=1;
    }
    for(i=0;i<DICTSIZE;i++) entryuse[i]=0;


    j=encoded[0];
    for(i=0;i<length-1;i++)
    {
        k=entrylength[j];
        if(k==0) printf("%i ",i);

        memcpy(&plain[pos],entries[j],k);
        entryuse[j]++;

        j=encoded[i+1];

        if(dp>=DICTSIZE)
        {
            for(u=256;u<dp;u++)
            {
                if(entryuse[u]==0)
                {
                    dp--;
                    entries[u]=entries[dp];
                    entrylength[u]=entrylength[dp];
                    entryuse[u]=entryuse[dp];
                    entryuse[dp]=0;
                }
            }
        }

        if(k<ENTRYMAX&&i<length-1&&dp<DICTSIZE)
        {
            entries[dp]=&plain[pos];
            plain[pos+k]=entries[j][0];
            entrylength[dp]=k+1;
            dp++;
        }

        pos+=k;
    }

    k=entrylength[j];
    if(k==0) printf("%i ",i);

    memcpy(&plain[pos],entries[j],k);

    delete []encoded;

    return (void*)plain;
}


// initialize the text renderer

void Text::init()
{
    char *fontdata;

    fontdata=(char*)decode(packedfont,3426,65536);

    glGenTextures(2,txtext);
    glBindTexture(GL_TEXTURE_2D,txtext[0]);
    glTexImage2D(GL_TEXTURE_2D,0,GL_RED,256,256,0,GL_RED,GL_UNSIGNED_BYTE,fontdata);
    glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_NEAREST);
    glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_NEAREST);

    glBindTexture(GL_TEXTURE_2D,txtext[1]);
    glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MAG_FILTER,GL_NEAREST);
    glTexParameteri(GL_TEXTURE_2D,GL_TEXTURE_MIN_FILTER,GL_NEAREST);

    delete []fontdata;

    memset(&textstate,0,sizeof(State));

    textstate.shadertext[State::SHADER_VERTEX]=textvertex;
    textstate.shadertext[State::SHADER_FRAGMENT]=textfragment;
    textstate.symcount=1;
    textstate.symname[0]=textsymbol;
    textstate.length[0]=4;
    textstate.flags=State::FLAG_BLEND|State::FLAG_EARLYZ;

    textstate.link();

    memset(&textarray,0,sizeof(Array));

    textarray.usestate=&textstate;
    textarray.elements = 6;
    textarray.data = textvertices;

    textarray.link();
}

// draw the text

void Text::update()
{
    glViewport(0,0,12*64,16*32);
    textstate.set();

    glUniform1i(glGetUniformLocation(textstate.program,"font"),0);
    glUniform1i(glGetUniformLocation(textstate.program,"console"),1);

    glActiveTexture(GL_TEXTURE0);
    glEnable(GL_TEXTURE_2D);
    glBindTexture(GL_TEXTURE_2D,txtext[0]);

    glActiveTexture(GL_TEXTURE1);
    glEnable(GL_TEXTURE_2D);
    glBindTexture(GL_TEXTURE_2D,txtext[1]);

    glTexImage2D(GL_TEXTURE_2D,0,GL_RED,64,32,0,GL_RED,GL_UNSIGNED_BYTE,console());

    textarray.draw();

    glDisable(GL_TEXTURE_2D);
    glActiveTexture(GL_TEXTURE0);
    glDisable(GL_TEXTURE_2D);

}

void Text::deinit()
{
    textarray.unlink();
    textstate.unlink();

    glDeleteTextures(2,txtext);
}



