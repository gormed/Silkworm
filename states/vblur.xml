<?xml version="1.0" ?>
<state>

	<shader type="vertex">

		#version 150
		
		uniform mat4 projection;
		uniform mat4 modelview;
		
		in vec4 position;
		
		out vec2 tc;
		
		void main() {
			gl_Position = position;
		}
			
	</shader>
	
	<shader type="fragment">
	
		#version 330
		
		uniform sampler2D tex;
		
		in vec2 tc;
		out vec4 frag;
		
		uniform float darken=-0.2;
		uniform float contrast=2.0;
		
		uniform float offset[4] = float[]( 0.5*32.0, 1.5*32.0, 2.5*32.0, 3.5*32.0 );
		uniform float weight[4] = float[]( 0.2, 0.15, 0.1, 0.05 );
		
		
		uniform vec2 invtargetsize;
		uniform vec2 invsourcesize;
	 
		void main(void)
		{			
			frag = (textureLod( tex, vec2(gl_FragCoord)*invtargetsize+vec2(0.0, offset[0])*invsourcesize ,5.0)+darken) * weight[0];
			frag += (textureLod( tex, vec2(gl_FragCoord)*invtargetsize-vec2(0.0, offset[0])*invsourcesize ,5.0)+darken) * weight[0];

			frag += (textureLod( tex, vec2(gl_FragCoord)*invtargetsize+vec2(0.0, offset[1])*invsourcesize ,5.0)+darken) * weight[1];
			frag += (textureLod( tex, vec2(gl_FragCoord)*invtargetsize-vec2(0.0, offset[1])*invsourcesize ,5.0)+darken) * weight[1];
			
			frag += (textureLod( tex, vec2(gl_FragCoord)*invtargetsize+vec2(0.0, offset[2])*invsourcesize ,5.0)+darken) * weight[2];
			frag += (textureLod( tex, vec2(gl_FragCoord)*invtargetsize-vec2(0.0, offset[2])*invsourcesize ,5.0)+darken) * weight[2];

			frag += (textureLod( tex, vec2(gl_FragCoord)*invtargetsize+vec2(0.0, offset[3])*invsourcesize ,5.0)+darken) * weight[3];
			frag += (textureLod( tex, vec2(gl_FragCoord)*invtargetsize-vec2(0.0, offset[3])*invsourcesize ,5.0)+darken) * weight[3];
		}

		
	</shader>
	
	<symbol name="position" length="4" />
	
	<uniform name="invtargetsize" />
	<uniform name="invsourcesize" />

	
</state>
